{
  "info": {
    "title": "OpenAPI v3.1 for nested2",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "nested2": {
        "title": "nested2",
        "required": [
          "resource2",
          "title"
        ],
        "properties": {
          "resource2": {
            "type": "string",
            "description": "ObjectId"
          },
          "title": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "description": "ObjectId"
          }
        }
      }
    }
  },
  "paths": {
    "/test/resource2/{resource2Id}/nested2": {
      "get": {
        "tags": [
          "nested2"
        ],
        "summary": "List multiple nested2 resources.",
        "description": "This operation allows you to list and search for nested2 resources provided query arguments.",
        "operationId": "getnested2s",
        "responses": {
          "200": {
            "description": "Resource(s) found.  Returned as array.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/nested2"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "How many records to skip when listing. Used for pagination.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many records to limit the output.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Which fields to sort the records on.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "required": false
          },
          {
            "name": "select",
            "in": "query",
            "description": "Select which fields will be returned by the query.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "required": false
          },
          {
            "name": "populate",
            "in": "query",
            "description": "Select which fields will be fully populated with the reference.",
            "schema": {
              "type": "string",
              "default": ""
            },
            "required": false
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: resource2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "tags": [
          "nested2"
        ],
        "summary": "Create a new nested2",
        "description": "Create a new nested2",
        "operationId": "createnested2",
        "responses": {
          "201": {
            "description": "The resource has been created."
          },
          "400": {
            "description": "An error has occured trying to create the resource."
          },
          "401": {
            "description": "Unauthorized.  Note that anonymous submissions are *enabled* by default."
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Data used to create a new nested2",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/nested2"
            }
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: resource2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/test/resource2/{resource2Id}/nested2/{nested2Id}": {
      "get": {
        "tags": [
          "nested2"
        ],
        "summary": "Return a specific nested2 instance.",
        "description": "Return a specific nested2 instance.",
        "operationId": "getnested2",
        "responses": {
          "200": {
            "description": "Resource found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nested2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "An error has occurred."
          }
        },
        "parameters": [
          {
            "name": "nested2Id",
            "in": "path",
            "description": "The ID of the nested2 that will be retrieved.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: resource2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "tags": [
          "nested2"
        ],
        "summary": "Update a specific nested2 instance.",
        "description": "Update a specific nested2 instance.",
        "operationId": "updatenested2",
        "responses": {
          "200": {
            "description": "Resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nested2"
                }
              }
            }
          },
          "400": {
            "description": "Resource could not be updated."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "An error has occurred."
          }
        },
        "parameters": [
          {
            "name": "nested2Id",
            "in": "path",
            "description": "The ID of the nested2 that will be updated.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Data used to update nested2",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/nested2"
            }
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: resource2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "nested2"
        ],
        "summary": "Delete a specific nested2",
        "description": "Delete a specific nested2",
        "operationId": "deletenested2",
        "responses": {
          "204": {
            "description": "Resource was deleted"
          },
          "400": {
            "description": "Resource could not be deleted."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "An error has occurred."
          }
        },
        "parameters": [
          {
            "name": "nested2Id",
            "in": "path",
            "description": "The ID of the nested2 that will be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: resource2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "openapi": "3.1"
}