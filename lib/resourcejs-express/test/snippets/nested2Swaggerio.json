{
  "definitions": {
    "nested2": {
      "title": "nested2",
      "properties": {
        "resource2": { "type": "string", "description": "ObjectId" },
        "title": { "type": "string" },
        "age": { "type": "integer", "format": "int64" },
        "description": { "type": "string" },
        "_id": { "type": "string", "description": "ObjectId" }
      }
    }
  },
  "paths": {
    "/test/resource2/{resource2Id}/nested2": {
      "get": {
        "tags": ["nested2"],
        "summary": "List multiple nested2 resources.",
        "description": "This operation allows you to list and search for nested2 resources provided query arguments.",
        "operationId": "getnested2s",
        "responses": {
          "200": {
            "description": "Resource(s) found.  Returned as array.",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/nested2" }
            }
          },
          "401": { "description": "Unauthorized." }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "How many records to skip when listing. Used for pagination.",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many records to limit the output.",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Which fields to sort the records on.",
            "type": "string",
            "required": false,
            "default": ""
          },
          {
            "name": "select",
            "in": "query",
            "description": "Select which fields will be returned by the query.",
            "type": "string",
            "required": false,
            "default": ""
          },
          {
            "name": "populate",
            "in": "query",
            "description": "Select which fields will be fully populated with the reference.",
            "type": "string",
            "required": false,
            "default": ""
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: test/resource2",
            "required": true,
            "type": "string"
          }
        ]
      },
      "post": {
        "tags": ["nested2"],
        "summary": "Create a new nested2",
        "description": "Create a new nested2",
        "operationId": "createnested2",
        "responses": {
          "201": { "description": "The resource has been created." },
          "400": {
            "description": "An error has occured trying to create the resource."
          },
          "401": {
            "description": "Unauthorized.  Note that anonymous submissions are *enabled* by default."
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Data used to create a new nested2",
            "required": true,
            "schema": { "$ref": "#/definitions/nested2" }
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: test/resource2",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/test/resource2/{resource2Id}/nested2/{nested2Id}": {
      "get": {
        "tags": ["nested2"],
        "summary": "Return a specific nested2 instance.",
        "description": "Return a specific nested2 instance.",
        "operationId": "getnested2",
        "responses": {
          "200": {
            "description": "Resource found",
            "schema": { "$ref": "#/definitions/nested2" }
          },
          "401": { "description": "Unauthorized." },
          "404": { "description": "Resource not found" },
          "500": { "description": "An error has occurred." }
        },
        "parameters": [
          {
            "name": "nested2Id",
            "in": "path",
            "description": "The ID of the nested2 that will be retrieved.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: test/resource2",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "tags": ["nested2"],
        "summary": "Update a specific nested2 instance.",
        "description": "Update a specific nested2 instance.",
        "operationId": "updatenested2",
        "responses": {
          "200": {
            "description": "Resource updated",
            "schema": { "$ref": "#/definitions/nested2" }
          },
          "400": { "description": "Resource could not be updated." },
          "401": { "description": "Unauthorized." },
          "404": { "description": "Resource not found" },
          "500": { "description": "An error has occurred." }
        },
        "parameters": [
          {
            "name": "nested2Id",
            "in": "path",
            "description": "The ID of the nested2 that will be updated.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Data used to update nested2",
            "required": true,
            "schema": { "$ref": "#/definitions/nested2" }
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: test/resource2",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "tags": ["nested2"],
        "summary": "Delete a specific nested2",
        "description": "Delete a specific nested2",
        "operationId": "deletenested2",
        "responses": {
          "204": { "description": "Resource was deleted" },
          "400": { "description": "Resource could not be deleted." },
          "401": { "description": "Unauthorized." },
          "404": { "description": "Resource not found" },
          "500": { "description": "An error has occurred." }
        },
        "parameters": [
          {
            "name": "nested2Id",
            "in": "path",
            "description": "The ID of the nested2 that will be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resource2Id",
            "description": "The parent model of nested2: test/resource2",
            "required": true,
            "type": "string"
          }
        ]
      }
    }
  }
}
